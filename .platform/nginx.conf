user                    nginx;
error_log               /var/log/nginx/error.log warn;
pid                     /var/run/nginx.pid;
worker_processes        auto;
worker_rlimit_nofile    33282;

events {
    use epoll;
    worker_connections  1024;
    multi_accept on;
}

http {
  include       /etc/nginx/mime.types;
  default_type  application/octet-stream;

  # UTF-8 기본 인코딩 설정 추가
  charset utf-8;
  charset_types text/plain text/css application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript application/javascript;

  log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';

  include       conf.d/*.conf;

  map $http_upgrade $connection_upgrade {
      default     "upgrade";
  }

  # Spring Boot 애플리케이션이 5000번 포트로 실행되도록 설정되어 있더라도,
  # Elastic Beanstalk의 기본 프록시 설정이 내부적으로 포트 포워딩을 처리하여
  # 8080 포트로의 요청을 5000 포트로 자동 전달하기 때문에 이전 설정도 정상 작동했습니다.
  upstream springboot {
    # server 127.0.0.1:8080;
    server 127.0.0.1:5000;
    keepalive 1024;
  }

  server {
      listen        80 default_server;
      listen        [::]:80 default_server;

      location / {
        
          # 모든 요청을 springboot upstream으로 전달
          proxy_pass          http://springboot;

          # HTTP 1.1 버전 사용 설정
          proxy_http_version  1.1;

          # WebSocket 연결을 위해 원본 Connection 헤더를 유지하여 전달
          proxy_set_header    Connection          $connection_upgrade;

          # WebSocket 프로토콜 업그레이드 정보를 유지하여 전달
          proxy_set_header    Upgrade             $http_upgrade;

          # 클라이언트가 요청한 원본 Host 정보를 백엔드 서버에게 전달
          proxy_set_header    Host                $host;

          # 클라이언트의 실제 IP 주소를 백엔드 서버에게 전달
          proxy_set_header    X-Real-IP           $remote_addr;

          # 요청이 거쳐온 프록시들의 IP 정보를 백엔드 서버에게 전달
          # (클라이언트 IP, 프록시1 IP, 프록시2 IP, ... 순서로 기록)
          proxy_set_header    X-Forwarded-For     $proxy_add_x_forwarded_for;

          # X-Forwarded-Proto 헤더는 클라이언트가 서버에 연결할 때 사용한 프로토콜(http 또는 https)을 백엔드 서버에 전달
          # 이를 통해 백엔드 애플리케이션은 원래 요청이 HTTP였는지 HTTPS였는지 알 수 있음
          proxy_set_header    X-Forwarded-Proto   $scheme;
          
          # proxy_redirect off는 백엔드 서버의 리다이렉션 응답에서 Location 헤더를 수정하지 않도록 설정합니다.
          # 기본적으로 nginx는 백엔드 서버의 리다이렉션 URL을 프록시 URL로 자동 변환하는데, 
          # 이 설정을 통해 원래 리다이렉션 URL을 그대로 유지
          proxy_redirect      off;
      }

      access_log    /var/log/nginx/access.log main;

      client_header_timeout 60;
      client_body_timeout   60;
      keepalive_timeout     60;
      gzip                  off;

      # Include the Elastic Beanstalk generated locations
      include conf.d/elasticbeanstalk/healthd.conf;
  }
}